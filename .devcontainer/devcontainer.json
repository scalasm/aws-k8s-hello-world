// For format details, see https://aka.ms/vscode-remote/devcontainer.json or this file's README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.195.0/containers/java
{
	"name": "Java",
	"build": {
		"dockerfile": "Dockerfile",
		"args": {
			// Update the VARIANT arg to pick a Java version: 8, 11, 17
			// Append -bullseye or -buster to pin to an OS version.
			// Use the -bullseye variants on local arm64/Apple Silicon.
			"VARIANT": "17",
			// Options
			"INSTALL_MAVEN": "true",
			"MAVEN_VERSION": "3.9.0",
			"INSTALL_GRADLE": "false",
			"NODE_VERSION": "lts/*",

			// Note that we target x86_64 by default, sorry no Arm :)
			// Set to "none" if you don't need these
			"AWS_CDK_VERSION": "latest",
			"AWS_SAM_VERSION": "latest",
			// Leave these to "none" if you don't want Kustomize or Skaffold 
			// Note "That Kubectl and helm wants the "v" prefix for versions
			"KUBECTL_VERSION": "v1.25.2",
			"HELM_VERSION": "v3.11.2",
			"KUSTOMIZE_VERSION": "latest",
			"SKAFFOLD_VERSION": "latest"
		}
	},
	// MongoDB, MySQL, and Kafka containers are running in separate Docker network (e.g., techbankNet) - 
	// If I want to be able to connect to them, the solution is to use "host" network and share the same
	// network settings as your host machine (e.g., your laptop).
	// See https://stackoverflow.com/questions/24319662/from-inside-of-a-docker-container-how-do-i-connect-to-the-localhost-of-the-mach .
	"runArgs": [
//		"--network=host"
	],
	// Configure tool-specific properties.#S
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			// Set *default* container specific settings.json values on container create.
			"settings": {
				"maven.executable.path": "/usr/local/sdkman/candidates/maven/current/bin/mvn",
				"telemetry.enableTelemetry": false
			},
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"pivotal.vscode-spring-boot",
				"vscjava.vscode-java-pack",
				"GabrielBB.vscode-lombok",
				"amazonwebservices.aws-toolkit-vscode",
				"boto3typed.boto3-ide",
				"googlecloudtools.cloudcode",
				"redhat.vscode-yaml",
				"redhat.fabric8-analytics",
				"jebbs.plantuml",
				"humao.rest-client"
			]
		}
	},
	"containerEnv": {
		"SAM_CLI_TELEMETRY": "0"
	},
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "bash ./.devcontainer/post-install.sh",
	// Uncomment to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode",
	"features": {
		"docker-in-docker": "latest",
		"github-cli": "latest",
		"aws-cli": "latest"
	},
	"mounts": [
		// We share the Kubect context with the hosting Linux / WSL2 system
		// If you don't want this, you will need to do additional work (like docker login)
		// within the dev container too
		"source=${localEnv:HOME}/.docker,target=/home/vscode/.docker,type=bind,consistency=cached",
		"source=${localEnv:HOME}/.kube,target=/home/vscode/.kube,type=bind,consistency=cached",
		//"source=${localEnv:HOME}/.docker,target=/home/vscode/.docker,type=bind,consistency=cached",
		// Re-use local AWS configuration
		"source=${localEnv:HOME}/.aws,target=/home/vscode/.aws,type=bind,consistency=cached",
		// Re-use local Git configuration
		"source=${localEnv:HOME}/.gitconfig,target=/home/vscode/.gitconfig,type=bind,consistency=cached",
		// Maven cache will be shared with my local system
		"source=${localEnv:HOME}/.m2,target=/home/vscode/.m2,type=bind,consistency=cached"
	]
}